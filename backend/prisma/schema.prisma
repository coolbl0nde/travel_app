generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TokenType {
  ACCESS
}

enum OpenAIRole {
  system
  user
  assistant
}

model Token {
  id Int @id @default(autoincrement())

  type   TokenType @default(ACCESS)
  value  String    @default("")
  userId Int

  createdOn DateTime @default(now())
  updatedOn DateTime @default(now())

  users User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userID")

  @@map("tokens")
}

model Country {
  id Int @id @default(autoincrement())

  name      String
  longitude Decimal?
  latitude  Decimal?

  userId Int

  createdOn DateTime @default(now())
  updatedOn DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userID")

  @@map("countries")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String
  name         String?
  passwordHash String
  lastRequest  DateTime @default(now())
  createdOn    DateTime @default(now())
  updatedOn    DateTime @default(now())

  tokens    Token[]
  countries Country[]
  messaged  Message[]

  @@map("users")
}

model Message {
  id Int @id @default(autoincrement())

  userId Int

  content String
  role    OpenAIRole

  isSaved Boolean @default(false)

  createdOn DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userID")

  @@map("messages")
}
